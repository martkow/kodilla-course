/*
 Task 28.4: Create audit tables for BOOKS and READERS, and triggers on these tables.
 */
 -- Audit tables
SELECT * FROM BOOKS;
CREATE TABLE BOOKS_AUD (
                        EVENT_ID INT NOT NULL AUTO_INCREMENT,
                        EVENT_DATE DATETIME NOT NULL,
                        EVENT_TYPE VARCHAR(10) NOT NULL,
                        BOOK_ID INT NOT NULL,
                        OLD_TITLE VARCHAR(25),
                        NEW_TITLE VARCHAR(25),
                        OLD_PUBYEAR INT,
                        NEW_PUBYEAR INT,
                        OLD_BESTSELLER BIT(1),
                        NEW_BESTSELLER BIT(1),
                        PRIMARY KEY(EVENT_ID)
);
SELECT * FROM READERS;
CREATE TABLE READERS_AUD (
                        EVENT_ID INT NOT NULL AUTO_INCREMENT,
                        EVENT_DATE DATETIME NOT NULL,
                        EVENT_TYPE VARCHAR(10) NOT NULL,
                        READER_ID INT NOT NULL,
                        OLD_FIRSTNAME VARCHAR(255),
                        NEW_FIRSTNAME VARCHAR(255),
                        OLD_LASTNAME VARCHAR(255),
                        NEW_LASTNAME VARCHAR(255),
                        OLD_PESELID VARCHAR(11),
                        NEW_PESELID VARCHAR(11),
                        OLD_VIP_LEVEL VARCHAR(20),
                        NEW_VIP_LEVEL VARCHAR(20),
                        PRIMARY KEY(EVENT_ID)
);

-- Triggers
DELIMITER $$

CREATE TRIGGER BOOKS_INSERT AFTER INSERT ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO  BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, NEW_TITLE, NEW_PUBYEAR, NEW_BESTSELLER)
    VALUES (CURTIME(), 'INSERT', NEW.BOOK_ID, NEW.TITLE, NEW.PUBYEAR, NEW.BESTSELLER); -- The new (inserted) record is represented inside the trigger by a variable named NEW.
END $$

DELIMITER ;
--
DELIMITER $$

CREATE TRIGGER BOOKS_DELETE AFTER DELETE ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO  BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, OLD_TITLE, OLD_PUBYEAR, OLD_BESTSELLER)
    VALUES (CURTIME(), 'DELETE', OLD.BOOK_ID, OLD.TITLE, OLD.PUBYEAR, OLD.BESTSELLER);
END $$

DELIMITER ;
--
DELIMITER $$

CREATE TRIGGER BOOKS_UPDATE AFTER UPDATE ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO  BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, OLD_TITLE, OLD_PUBYEAR, OLD_BESTSELLER, NEW_TITLE, NEW_PUBYEAR, NEW_BESTSELLER)
    VALUES (CURTIME(), 'UPDATE', OLD.BOOK_ID, OLD.TITLE, OLD.PUBYEAR, OLD.BESTSELLER, NEW.TITLE, NEW.PUBYEAR, NEW.BESTSELLER);
END $$

DELIMITER ;
--
INSERT INTO BOOKS (TITLE, PUBYEAR, BESTSELLER) VALUES ('Bubus life', '2024', true);
DELETE FROM BOOKS WHERE BOOK_ID = 12;
UPDATE BOOKS SET TITLE = 'Bubuslaw life' WHERE BOOK_ID = 11;

SELECT * FROM BOOKS_AUD;



--
DELIMITER $$

CREATE TRIGGER READERS_INSERT AFTER INSERT ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO  READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_FIRSTNAME, NEW_LASTNAME, NEW_PESELID, NEW_VIP_LEVEL)
    VALUES (CURTIME(), 'INSERT', NEW.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID, NEW.VIP_LEVEL); -- The new (inserted) record is represented inside the trigger by a variable named NEW.
END $$

DELIMITER ;
--
DELIMITER $$

CREATE TRIGGER READERS_DELETE AFTER DELETE ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO  READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, OLD_FIRSTNAME, OLD_LASTNAME, OLD_PESELID, OLD_VIP_LEVEL)
    VALUES (CURTIME(), 'DELETE', OLD.READER_ID, OLD.FIRSTNAME, OLD.LASTNAME, OLD.PESELID, OLD.VIP_LEVEL);
END $$

DELIMITER ;
--
DELIMITER $$

CREATE TRIGGER READERS_UPDATE AFTER UPDATE ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO  READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_FIRSTNAME, NEW_LASTNAME, NEW_PESELID, NEW_VIP_LEVEL, OLD_FIRSTNAME, OLD_LASTNAME, OLD_PESELID, OLD_VIP_LEVEL)
    VALUES (CURTIME(), 'UPDATE', OLD.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID, NEW.VIP_LEVEL, OLD.FIRSTNAME, OLD.LASTNAME, OLD.PESELID, OLD.VIP_LEVEL);
END $$

DELIMITER ;
--
INSERT INTO READERS (FIRSTNAME, LASTNAME, PESELID, VIP_LEVEL) VALUES ('Bubus', 'Bubuslawski', '1111111111', 'Not set');
DELETE FROM READERS WHERE READER_ID = 6;
UPDATE READERS SET PESELID = '2222222222' WHERE READER_ID = 11;

SELECT * FROM READERS_AUD;

